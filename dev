#!/usr/bin/env bash

upload_api_doc () {
    sbt doc && \
        now switch xieyuheng && \
        now -n cicada target/scala-2.12/api/ && \
        surge target/scala-2.12/api/ cicada.surge.sh
}

get_classpath () {
    mkdir -p target
    sbt -error "export runtime:fullClasspath" > target/classpath
}

t () {
    rm -f target/universal/stage/bin/*

    sbt stage && \
        test_general && \
        test_tartlet && \
        test_lambda && \
        test_syst && \
        test_minitt && \
        test_cicada
}

test_general () {
    for file in $(find . | grep "^\./target/universal/stage/bin/" | grep "test$")
    do
        echo ""
        echo "[test] $file"
        if ! time $file
        then
            exit 1
        fi
    done
}

test () {
    name=$1

    prog=./target/universal/stage/bin/${name}

    for file in $(find . | grep "^\./example/${name}/" | grep "\.${name}$")
    do
        echo ""
        echo "[${name}] $file"
        if ! time $prog --eval $file
        then
            exit 1
        fi
    done
}

test_lambda () {
    test lambda
}

test_syst () {
    test syst
}

test_tartlet () {
    test tartlet
}

test_minitt () {
    test minitt
}

test_cicada () {
    name=cicada

    prog=./target/universal/stage/bin/${name}

    for file in $(find . | grep "^\./example/${name}/" | grep "\.cic$")
    do
        echo ""
        echo "[${name}] $file"
        if ! time $prog --eval $file
        then
            exit 1
        fi
    done
}

build_native_image () {
    mkdir -p target/linux/bin/
    get_classpath

    name=$1

    native-image \
        -cp $(cat target/classpath) \
        -H:Name="target/linux/bin/${name}" \
        -H:Class="xieyuheng.${name}.${name}"
}

build_lambda () {
    build_native_image lambda
    native-image --server-shutdown-all
}

build_syst () {
    build_native_image syst
    native-image --server-shutdown-all
}

build_tartlet () {
    build_native_image tartlet
    native-image --server-shutdown-all
}

build_minitt () {
    build_native_image minitt
    native-image --server-shutdown-all
}

build_cicada () {
    build_native_image cicada
    native-image --server-shutdown-all
}

build_all () {
    build_native_image lambda && \
        build_native_image syst && \
        build_native_image tartlet && \
        build_native_image minitt

    native-image --server-shutdown-all
}

release () {
    cp -r target/linux/ ~/proj/cicada-release/ && \
        pushd ~/proj/cicada-release/ && \
        git add . && \
        git commit -m "up" && \
        git push && \
        popd
}

main () {
    for TASK in $@
    do
        $TASK
    done
}

main $@
