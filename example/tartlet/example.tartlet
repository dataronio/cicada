eval! the(nat_t, zero)

eval! the(string_t, "abc")

// let x: nat_t = nat_t

// eval! x

let three: nat_t =
  succ(succ(succ(zero)))

let add: (nat_t, nat_t) -> nat_t = {
  (n, k) => nat_ind(
    n, _ => nat_t,
    k, (prev, almost) => succ(almost))
}

eval! three
eval! add(three)
eval! add(three, three)
